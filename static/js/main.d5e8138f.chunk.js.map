{"version":3,"sources":["serviceWorker.js","services/token-service.js","services/idle-service.js","contexts/ThingListContext.js","contexts/ThingContext.js","config.js","components/Header/Header.js","components/Utils/PrivateRoute.js","components/Utils/PublicOnlyRoute.js","services/thing-api-service.js","components/Utils/Utils.js","components/ThingStarRating/ThingStarRating.js","components/ThingListItem/ThingListItem.js","routes/ThingListPage/ThingListPage.js","components/ReviewForm/ReviewForm.js","routes/ThingPage/ThingPage.js","services/auth-api-service.js","components/LoginForm/LoginForm.js","routes/LoginPage/LoginPage.js","components/RegistrationForm/RegistrationForm.js","routes/RegistrationPage/RegistrationPage.js","routes/NotFoundPage/NotFoundPage.js","components/App/App.js","index.js"],"names":["Boolean","window","location","hostname","match","_timeoutId","ThingListContext","React","createContext","thingList","error","setError","clearError","setThingList","ThingListProvider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","setState","console","inherits","createClass","key","value","react_default","a","createElement","Provider","props","children","Component","nullThing","author","tags","ThingContext","thing","reviews","setThing","clearThing","setReviews","addReview","ThingProvider","review","toConsumableArray","config","TokenService","saveAuthToken","token","sessionStorage","setItem","getAuthToken","getItem","clearAuthToken","info","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","parseJwt","jwt","jwtDecode","readJwtToken","_getMsUntilExpiry","payload","exp","Date","now","queueCallbackBeforeExpiry","callback","msUntilExpiry","setTimeout","clearCallbackBeforeExpiry","clearTimeout","_idleCallback","_notIdleEvents","IdleService","setIdleCallback","idleCallback","resetIdleTimer","ev","type","regiserIdleTimerResets","forEach","event","document","addEventListener","unRegisterIdleResets","removeEventListener","Header","handleLogoutClick","className","Link","onClick","to","Fragment","react_fontawesome_index_es","icon","renderLogoutLink","renderLoginLink","PrivateRoute","_ref","component","objectWithoutProperties","Route","assign","render","componentProps","Redirect","pathname","from","PublicOnlyRoute","ThingApiService","getThings","fetch","headers","then","res","ok","json","e","Promise","reject","getThing","thingId","authToken","Authorization","getThingReviews","postReview","text","rating","method","content-type","body","JSON","stringify","thing_id","Hyph","Button","_ref2","join","Textarea","_ref3","Input","_ref4","Required","_ref5","Section","_ref6","list","classes","filter","ThingStarRating","stars","filled","i","map","star","index","Star","library","ThingListItem","id","style","backgroundImage","image","title","words","split","slice","truncate","content","average_review_rating","number","readableReviewCount","number_of_reviews","ThingListPage","context","catch","_this$context$thingLi","ThingListItem_ThingListItem_ThingListItem","renderThings","contextType","ReviewForm","handleSubmit","preventDefault","_ev$target","target","Number","onSubmit","required","aria-label","name","cols","rows","placeholder","htmlFor","ThingPage","params","_this$context","ThingContent","ThingReviews","ReviewForm_ReviewForm_ReviewForm","_this$context2","renderThing","_ref2$reviews","size","user","full_name","defaultProps","AuthApiService","postUser","postLogin","credentials","postRefreshToken","authorization","err","log","LoginForm","handleSubmitJwtAuth","user_name","onLoginSuccess","handleSubmitBasicAuth","_ev$target2","role","LoginPage","handleLoginSuccess","_this$props","history","destination","push","LoginForm_LoginForm","RegistrationForm","nick_name","nickname","onRegistrationSuccess","RegistrationPage","handleRegistrationSuccess","RegistrationForm_RegistrationForm","NotFoundPage","App","hasError","logoutFromIdle","forceUpdate","Header_Header_Header","Switch","exact","path","add","faGift","faListUl","faListOl","faGlobeAmericas","faPenAlt","faBookOpen","faComment","faQuoteLeft","farStar","fasStar","ReactDOM","BrowserRouter","basename","process","ThingListContext_ThingListProvider","ThingContext_ThingProvider","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5e8138f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import jwtDecode from \"jwt-decode\";\nimport config from \"../config\";\n\nlet _timeoutId;\nconst _TEN_SECONDS_IN_MS = 10000;\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.sessionStorage.setItem(config.TOKEN_KEY, token);\n  },\n  getAuthToken() {\n    return window.sessionStorage.getItem(config.TOKEN_KEY);\n  },\n  clearAuthToken() {\n    console.info(\"clearing the auth token\");\n    window.sessionStorage.removeItem(config.TOKEN_KEY);\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken();\n  },\n  makeBasicAuthToken(userName, password) {\n    return window.btoa(`${userName}:${password}`);\n  },\n  parseJwt(jwt) {\n    return jwtDecode(jwt);\n  },\n  readJwtToken() {\n    return TokenService.parseJwt(TokenService.getAuthToken());\n  },\n  _getMsUntilExpiry(payload) {\n    /*\n      payload is from the JWT\n      the `exp` value is in seconds, need to convert to ms, so * 1000\n      calculates the difference between now and when the JWT will expire\n    */\n    return payload.exp * 1000 - Date.now();\n  },\n  queueCallbackBeforeExpiry(callback) {\n    /* get the number of ms from now until the token expires */\n    const msUntilExpiry = TokenService._getMsUntilExpiry(\n      TokenService.readJwtToken()\n    );\n    /*\n      queue a callback that will happen 10 seconds before the token expires\n      the callback is passed in as an argument so could be anything,\n        in this app, the callback is for calling the refresh endpoint\n    */\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS);\n  },\n  clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId);\n  }\n};\n\nexport default TokenService;\n","/*\n  Idle Service\n  this service manages when a user has gone idle (not interacting with the page).\n*/\n\nlet _timeoutId;\nlet _idleCallback = null;\nlet _notIdleEvents = [\n  \"mousedown\",\n  \"mousemove\",\n  \"keypress\",\n  \"scroll\",\n  \"touchstart\"\n];\nlet _FIVE_MINUTES_IN_MS = 5 * 60 * 1000;\n\nconst IdleService = {\n  setIdleCallback(idleCallback) {\n    /* store a callback to call when the user goes idle */\n    _idleCallback = idleCallback;\n  },\n  /* called when a user interacts with the page */\n  resetIdleTimer(ev) {\n    console.info(\"event:\", ev.type);\n    /* remove any timeouts as the user just interacted */\n    clearTimeout(_timeoutId);\n    /* queue the callback to happen 5 minutes from now */\n    _timeoutId = setTimeout(_idleCallback, _FIVE_MINUTES_IN_MS);\n  },\n  regiserIdleTimerResets() {\n    /* register the resetIdleTimer for events when a user interacts with page */\n    _notIdleEvents.forEach(event =>\n      document.addEventListener(event, IdleService.resetIdleTimer, true)\n    );\n  },\n  unRegisterIdleResets() {\n    /* remove any queued callbacks and events that will queue callbacks */\n    clearTimeout(_timeoutId);\n    _notIdleEvents.forEach(event =>\n      document.removeEventListener(event, IdleService.resetIdleTimer, true)\n    );\n  }\n};\n\nexport default IdleService;\n","import React, { Component } from 'react'\n\nconst ThingListContext = React.createContext({\n  thingList: [],\n  error: null,\n  setError: () => {},\n  clearError: () => {},\n  setThingList: () => {},\n})\nexport default ThingListContext\n\nexport class ThingListProvider extends Component {\n  state = {\n    thingList: [],\n    error: null,\n  };\n\n  setThingList = thingList => {\n    this.setState({ thingList })\n  }\n\n  setError = error => {\n    console.error(error)\n    this.setState({ error })\n  }\n\n  clearError = () => {\n    this.setState({ error: null })\n  }\n\n  render() {\n    const value = {\n      thingList: this.state.thingList,\n      error: this.state.error,\n      setError: this.setError,\n      clearError: this.clearError,\n      setThingList: this.setThingList,\n    }\n    return (\n      <ThingListContext.Provider value={value}>\n        {this.props.children}\n      </ThingListContext.Provider>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport const nullThing = {\n  author: {},\n  tags: [],\n}\n\nconst ThingContext = React.createContext({\n  thing: nullThing,\n  reviews: [],\n  error: null,\n  setError: () => {},\n  clearError: () => { },\n  setThing: () => {},\n  clearThing: () => {},\n  setReviews: () => {},\n  addReview: () => {},\n})\n\nexport default ThingContext\n\nexport class ThingProvider extends Component {\n  state = {\n    thing: nullThing,\n    error: null,\n  };\n\n  setError = error => {\n    console.error(error)\n    this.setState({ error })\n  }\n\n  clearError = () => {\n    this.setState({ error: null })\n  }\n\n  setThing = thing => {\n    this.setState({ thing })\n  }\n\n  setReviews = reviews => {\n    this.setState({ reviews })\n  }\n\n  clearThing = () => {\n    this.setThing(nullThing)\n    this.setReviews([])\n  }\n\n  addReview = review => {\n    this.setReviews([\n      ...this.state.reviews,\n      review\n    ])\n  }\n\n  render() {\n    const value = {\n      thing: this.state.thing,\n      reviews: this.state.reviews,\n      error: this.state.error,\n      setError: this.setError,\n      clearError: this.clearError,\n      setThing: this.setThing,\n      setReviews: this.setReviews,\n      clearThing: this.clearThing,\n      addReview: this.addReview,\n    }\n    return (\n      <ThingContext.Provider value={value}>\n        {this.props.children}\n      </ThingContext.Provider>\n    )\n  }\n}\n","export default {\n  API_ENDPOINT: \"http://localhost:8000/api\",\n  TOKEN_KEY: \"my-own-special-jwt-secret\"\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TokenService from \"../../services/token-service\";\nimport IdleService from \"../../services/idle-service\";\nimport \"./Header.css\";\n\nexport default class Header extends Component {\n  handleLogoutClick = () => {\n    TokenService.clearAuthToken();\n    /* when logging out, clear the callbacks to the refresh api and idle auto logout */\n    TokenService.clearCallbackBeforeExpiry();\n    IdleService.unRegisterIdleResets();\n  };\n\n  renderLogoutLink() {\n    return (\n      <div className=\"Header__logged-in\">\n        <Link onClick={this.handleLogoutClick} to=\"/\">\n          Logout\n        </Link>\n      </div>\n    );\n  }\n\n  renderLoginLink() {\n    return (\n      <div className=\"Header__not-logged-in\">\n        <Link to=\"/login\">Log in</Link>\n        <Link to=\"/register\">Register</Link>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <nav className=\"Header\">\n          <h1>\n            <Link to=\"/\">\n              <FontAwesomeIcon className=\"blue\" icon=\"gift\" /> Thingful\n            </Link>\n          </h1>\n          <span className=\"Header__tagline--wide\">Rate all the things.</span>\n          {TokenService.hasAuthToken()\n            ? this.renderLogoutLink()\n            : this.renderLoginLink()}\n        </nav>\n\n        <span className=\"Header__tagline--narrow\">Rate all the things.</span>\n      </>\n    );\n  }\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport TokenService from '../../services/token-service'\n\nexport default function PrivateRoute({ component, ...props }) {\n  const Component = component\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        TokenService.hasAuthToken()\n          ? <Component {...componentProps} />\n          : <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: componentProps.location }\n              }}\n            />\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport TokenService from '../../services/token-service'\n\nexport default function PublicOnlyRoute({ component, ...props }) {\n  const Component = component\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        TokenService.hasAuthToken()\n          ? <Redirect to={'/'} />\n          : <Component {...componentProps} />\n      )}\n    />\n  )\n}\n","import config from '../config'\nimport TokenService from './token-service'\n\nconst ThingApiService = {\n  getThings() {\n    return fetch(`${config.API_ENDPOINT}/things`, {\n      headers: {\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  getThing(thingId) {\n\n    const authToken = TokenService.getAuthToken();\n\n    return fetch(`${config.API_ENDPOINT}/things/${thingId}`, {\n      headers: {\n        'Authorization': `Bearer ${authToken}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  getThingReviews(thingId) {\n\n    const authToken = TokenService.getAuthToken();\n\n    return fetch(`${config.API_ENDPOINT}/things/${thingId}/reviews`, {\n      headers: {\n        'Authorization': `Bearer ${authToken}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  postReview(thingId, text, rating) {\n\n    const authToken = TokenService.getAuthToken();\n\n    return fetch(`${config.API_ENDPOINT}/reviews`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${authToken}`,\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        thing_id: thingId,\n        rating,\n        text,\n      }),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  }\n}\n\nexport default ThingApiService\n","import React from 'react'\nimport { format as formatDate } from 'date-fns'\nimport './Utils.css'\n\nexport function NiceDate({ date, format='Do MMMM YYYY' }) {\n  return formatDate(date, format)\n}\n\nexport function Hyph() {\n  return <span className='Hyph'>{' - '}</span>\n}\n\nexport function Button({ className, ...props }) {\n  return <button className={['Button', className].join(' ')} {...props} />\n}\n\nexport function Textarea({ className, ...props }) {\n  return (\n    <textarea className={['Textarea', className].join(' ')} {...props} />\n  )\n}\n\nexport function Input({ className, ...props }) {\n  return (\n    <input className={['Input', className].join(' ')} {...props} />\n  )\n}\n\nexport function Required({ className, ...props }) {\n  return (\n    <span className={['Required', className].join(' ')} {...props}>\n      &#42;\n    </span>\n  )\n}\n\nexport function Section({ className, list, ...props }) {\n  const classes = [\n    'Section',\n    list && 'Section--list',\n    className,\n  ].filter(Boolean).join(' ')\n  return (\n    <section className={classes} {...props} />\n  )\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport function ThingStarRating({rating}) {\n  const stars = [\n    { filled: false },\n    { filled: false },\n    { filled: false },\n    { filled: false },\n    { filled: false },\n  ]\n\n  for (let i = 0; i < rating; i++) {\n    stars[i].filled = true\n  }\n\n  return <span className='ThingStarRating'>\n    { stars.map((star, index) => <Star key={index} filled={star.filled} />) }\n  </span>\n}\n\nfunction Star({filled}) {\n  const library = filled ? 'fas' : 'far'\n  return <FontAwesomeIcon className='blue' icon={ [ library, 'star'  ]  } />\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ThingStarRating } from '../ThingStarRating/ThingStarRating'\nimport './ThingListItem.css'\n\nexport default class ThingListItem extends Component {\n  render() {\n    const { thing } = this.props\n\n    return (\n      <Link to={`/thing/${thing.id}`} className='ThingListItem'>\n        <div className='ThingListItem__image' style={{backgroundImage: `url(${thing.image})`}} />\n\n        <div className='ThingListItem__details'>\n          <div className='ThingListItem__text'>\n            <h2 className='ThingListItem__heading'>{thing.title}</h2>\n            <p className='ThingListItem__description'>{truncate(thing.content)}</p>\n          </div>\n\n          <div className='ThingListItem__reviews'>\n            <ThingStarRating rating={thing.average_review_rating} />\n            <span id='ThingListItem__review-count'>{readableReviewCount(thing.number_of_reviews)}</span>\n          </div>\n        </div>\n      </Link>\n    )\n  }\n}\n\nfunction readableReviewCount(number) {\n  switch(number) {\n    case 0:\n      return 'no reviews yet'\n\n    case 1:\n      return `based on 1 review`\n\n    default:\n      return `based on ${number} reviews`\n  }\n}\n\nfunction truncate(text) {\n  const words = text.split(' ')\n\n  if (words.length > 10) {\n    return words.slice(0, 10).join(' ') + ' ...'\n  }\n\n  return text\n}\n","import React, { Component } from 'react'\nimport ThingListContext from '../../contexts/ThingListContext'\nimport ThingApiService from '../../services/thing-api-service'\nimport { Section } from '../../components/Utils/Utils'\nimport ThingListItem from '../../components/ThingListItem/ThingListItem'\nimport './ThingListPage.css'\n\nexport default class ThingListPage extends Component {\n  static contextType = ThingListContext\n\n  componentDidMount() {\n    this.context.clearError()\n    ThingApiService.getThings()\n      .then(this.context.setThingList)\n      .catch(this.context.setError)\n  }\n\n  renderThings() {\n    const { thingList = [] } = this.context\n    return thingList.map(thing =>\n      <ThingListItem\n        key={thing.id}\n        thing={thing}\n      />\n    )\n  }\n\n  render() {\n    const { error } = this.context\n    return (\n      <Section list className='ThingListPage'>\n        {error\n          ? <p className='red'>There was an error, try again</p>\n          : this.renderThings()}\n      </Section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ThingContext from '../../contexts/ThingContext'\nimport ThingApiService from '../../services/thing-api-service'\nimport { Button, Textarea } from '../Utils/Utils'\nimport './ReviewForm.css'\n\nexport default class ReviewForm extends Component {\n  static contextType = ThingContext\n\n  handleSubmit = ev => {\n    ev.preventDefault()\n    const { thing } = this.context\n    const { text, rating } = ev.target\n\n    ThingApiService.postReview(thing.id, text.value, Number(rating.value))\n      .then(this.context.addReview)\n      .then(() => {\n        text.value = ''\n      })\n      .catch(this.context.setError)\n  }\n\n  render() {\n    return (\n      <form\n        className='ReviewForm'\n        onSubmit={this.handleSubmit}\n      >\n        <div className='text'>\n          <Textarea\n            required\n            aria-label='Type a review...'\n            name='text'\n            id='text'\n            cols='30'\n            rows='3'\n            placeholder='Type a review..'>\n          </Textarea>\n        </div>\n\n        <div className='select'>\n          <label htmlFor='rating'>Rate this thing!</label>\n          <select\n            required\n            aria-label='Rate this thing!'\n            name='rating'\n            id='rating'\n          >\n            <option value='1'>1 Star</option>\n            <option value='2'>2 Stars</option>\n            <option value='3'>3 Stars</option>\n            <option value='4'>4 Stars</option>\n            <option value='5'>5 Stars</option>\n          </select>\n        </div>\n\n        <Button type='submit'>\n          Post review\n        </Button>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ThingContext from '../../contexts/ThingContext'\nimport ThingApiService from '../../services/thing-api-service'\nimport { Hyph, Section } from '../../components/Utils/Utils'\nimport { ThingStarRating } from '../../components/ThingStarRating/ThingStarRating'\nimport ReviewForm from '../../components/ReviewForm/ReviewForm'\nimport './ThingPage.css'\n\nexport default class ThingPage extends Component {\n  static defaultProps = {\n    match: { params: {} },\n  }\n\n  static contextType = ThingContext\n\n  componentDidMount() {\n\n    const { thingId } = this.props.match.params\n    this.context.clearError()\n    ThingApiService.getThing(thingId)\n      .then(this.context.setThing)\n      .catch(this.context.setError)\n    ThingApiService.getThingReviews(thingId)\n      .then(this.context.setReviews)\n      .catch(this.context.setError)\n  }\n\n  componentWillUnmount() {\n    this.context.clearThing()\n  }\n\n  renderThing() {\n    const { thing, reviews } = this.context\n    return <>\n      <div className='ThingPage__image' style={{backgroundImage: `url(${thing.image})`}} />\n      <h2>{thing.title}</h2>\n      <ThingContent thing={thing} />\n      <ThingReviews reviews={reviews} />\n      <ReviewForm />\n    </>\n  }\n\n  render() {\n    const { error, thing } = this.context\n    let content\n    if (error) {\n      content = (error.error === `Thing doesn't exist`)\n        ? <p className='red'>Thing not found</p>\n        : <p className='red'>There was an error</p>\n    } else if (!thing.id) {\n      content = <div className='loading' />\n    } else {\n      content = this.renderThing()\n    }\n    return (\n      <Section className='ThingPage'>\n        {content}\n      </Section>\n    )\n  }\n}\n\nfunction ThingContent({ thing }) {\n  return (\n    <p className='ThingPage__content'>\n      {thing.content}\n    </p>\n  )\n}\n\nfunction ThingReviews({ reviews = [] }) {\n  return (\n    <ul className='ThingPage__review-list'>\n      {reviews.map(review =>\n        <li key={review.id} className='ThingPage__review'>\n          <p className='ThingPage__review-text'>\n            <FontAwesomeIcon\n              size='lg'\n              icon='quote-left'\n              className='ThingPage__review-icon blue'\n            />\n            {review.text}\n          </p>\n          <p className='ThingPage__review-user'>\n            <ThingStarRating rating={review.rating} />\n            <Hyph />\n            {review.user.full_name}\n          </p>\n        </li>\n      )}\n    </ul>\n  )\n}\n","import config from \"../config\";\nimport TokenService from \"./token-service\";\nimport IdleService from \"./idle-service\";\n\nconst AuthApiService = {\n  postUser(user) {\n    return fetch(`${config.API_ENDPOINT}/users`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(res =>\n      !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()\n    );\n  },\n  postLogin(credentials) {\n    return fetch(`${config.API_ENDPOINT}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(res =>\n        !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()\n      )\n      .then(res => {\n        /*\n        whenever a logint is performed:\n        1. save the token in local storage\n        2. queue auto logout when the user goes idle\n        3. queue a call to the refresh endpoint based on the JWT's exp value\n      */\n        TokenService.saveAuthToken(res.authToken);\n        IdleService.regiserIdleTimerResets();\n        TokenService.queueCallbackBeforeExpiry(() => {\n          AuthApiService.postRefreshToken();\n        });\n        return res;\n      });\n  },\n  postRefreshToken() {\n    return fetch(`${config.API_ENDPOINT}/auth/refresh`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer ${TokenService.getAuthToken()}`\n      }\n    })\n      .then(res =>\n        !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()\n      )\n      .then(res => {\n        /*\n        similar logic to whenever a user logs in, the only differences are:\n        - we don't need to queue the idle timers again as the user is already logged in.\n        - we'll catch the error here as this refresh is happening behind the scenes\n      */\n        TokenService.saveAuthToken(res.authToken);\n        TokenService.queueCallbackBeforeExpiry(() => {\n          AuthApiService.postRefreshToken();\n        });\n        return res;\n      })\n      .catch(err => {\n        console.log(\"refresh token request error\");\n        console.error(err);\n      });\n  }\n};\n\nexport default AuthApiService;\n","import React, { Component } from \"react\";\nimport { Button, Input } from \"../Utils/Utils\";\nimport TokenService from \"../../services/token-service\";\nimport AuthApiService from \"../../services/auth-api-service\";\n\nexport default class LoginForm extends Component {\n  static defaultProps = {\n    onLoginSuccess: () => {}\n  };\n\n  handleSubmitJwtAuth = ev => {\n    ev.preventDefault();\n    this.setState({ error: null });\n    const { user_name, password } = ev.target;\n\n    AuthApiService.postLogin({\n      user_name: user_name.value,\n      password: password.value\n    })\n      .then(res => {\n        user_name.value = \"\";\n        password.value = \"\";\n        TokenService.saveAuthToken(res.authToken);\n        this.props.onLoginSuccess();\n      })\n      .catch(res => {\n        this.setState({ error: res.error });\n      });\n  };\n\n  state = { error: null };\n\n  handleSubmitBasicAuth = ev => {\n    ev.preventDefault();\n    const { user_name, password } = ev.target;\n\n    console.log(\"login form submitted\");\n    console.log(user_name.value, password.value);\n\n    const authToken = window.btoa(`${user_name.value}:${password.value}`);\n\n    TokenService.saveAuthToken(authToken);\n\n    user_name.value = \"\";\n    password.value = \"\";\n    this.props.onLoginSuccess();\n  };\n\n  render() {\n    const { error } = this.state;\n    return (\n      <form className=\"LoginForm\" onSubmit={this.handleSubmitJwtAuth}>\n        <div role=\"alert\">{error && <p className=\"red\">{error}</p>}</div>\n        <div className=\"user_name\">\n          <label htmlFor=\"LoginForm__user_name\">User name</label>\n          <Input required name=\"user_name\" id=\"LoginForm__user_name\" />\n        </div>\n        <div className=\"password\">\n          <label htmlFor=\"LoginForm__password\">Password</label>\n          <Input\n            required\n            name=\"password\"\n            type=\"password\"\n            id=\"LoginForm__password\"\n          />\n        </div>\n        <Button type=\"submit\">Login</Button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport LoginForm from '../../components/LoginForm/LoginForm'\nimport { Section } from '../../components/Utils/Utils'\n\nexport default class LoginPage extends Component {\n  static defaultProps = {\n    location: {},\n    history: {\n      push: () => {},\n    },\n  }\n\n  handleLoginSuccess = () => {\n    const { location, history } = this.props\n    const destination = (location.state || {}).from || '/'\n    history.push(destination)\n  }\n\n  render() {\n    return (\n      <Section className='LoginPage'>\n        <h2>Login</h2>\n        <LoginForm\n          onLoginSuccess={this.handleLoginSuccess}\n        />\n      </Section>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, Input, Required } from \"../Utils/Utils\";\nimport AuthApiService from \"../../services/auth-api-service\";\n\nexport default class RegistrationForm extends Component {\n  static defaultProps = {\n    onRegistrationSuccess: () => {}\n  };\n\n  state = { error: null };\n\n  handleSubmit = ev => {\n    ev.preventDefault();\n    const { full_name, nick_name, user_name, password } = ev.target;\n\n    this.setState({ error: null });\n    AuthApiService.postUser({\n      user_name: user_name.value,\n      password: password.value,\n      full_name: full_name.value,\n      nickname: nick_name.value\n    })\n      .then(user => {\n        full_name.value = \"\";\n        nick_name.value = \"\";\n        user_name.value = \"\";\n        password.value = \"\";\n        this.props.onRegistrationSuccess();\n      })\n      .catch(res => {\n        this.setState({ error: res.error });\n      });\n  };\n\n  render() {\n    const { error } = this.state;\n    return (\n      <form className=\"RegistrationForm\" onSubmit={this.handleSubmit}>\n        <div role=\"alert\">{error && <p className=\"red\">{error}</p>}</div>\n        <div className=\"full_name\">\n          <label htmlFor=\"RegistrationForm__full_name\">\n            Full name <Required />\n          </label>\n          <Input\n            name=\"full_name\"\n            type=\"text\"\n            required\n            id=\"RegistrationForm__full_name\"\n          />\n        </div>\n        <div className=\"user_name\">\n          <label htmlFor=\"RegistrationForm__user_name\">\n            User name <Required />\n          </label>\n          <Input\n            name=\"user_name\"\n            type=\"text\"\n            required\n            id=\"RegistrationForm__user_name\"\n          />\n        </div>\n        <div className=\"password\">\n          <label htmlFor=\"RegistrationForm__password\">\n            Password <Required />\n          </label>\n          <Input\n            name=\"password\"\n            type=\"password\"\n            required\n            id=\"RegistrationForm__password\"\n          />\n        </div>\n        <div className=\"nick_name\">\n          <label htmlFor=\"RegistrationForm__nick_name\">Nickname</label>\n          <Input\n            name=\"nick_name\"\n            type=\"text\"\n            required\n            id=\"RegistrationForm__nick_name\"\n          />\n        </div>\n        <Button type=\"submit\">Register</Button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Section } from '../../components/Utils/Utils'\nimport RegistrationForm from '../../components/RegistrationForm/RegistrationForm'\n\nexport default class RegistrationPage extends Component {\n  static defaultProps = {\n    history: {\n      push: () => {},\n    },\n  }\n\n  handleRegistrationSuccess = user => {\n    const { history } = this.props\n    history.push('/login')\n  }\n\n  render() {\n    return (\n      <Section className='RegistrationPage'>\n        <h2>Register</h2>\n        <RegistrationForm\n          onRegistrationSuccess={this.handleRegistrationSuccess}\n        />\n      </Section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Section } from '../../components/Utils/Utils'\n\nexport default class NotFoundPage extends Component {\n  render() {\n    return (\n      <Section className='NotFoundPage'>\n        <h2>404 - Page not found</h2>\n        <p>Try going back to your previous page.</p>\n      </Section>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"../Header/Header\";\nimport PrivateRoute from \"../Utils/PrivateRoute\";\nimport PublicOnlyRoute from \"../Utils/PublicOnlyRoute\";\nimport ThingListPage from \"../../routes/ThingListPage/ThingListPage\";\nimport ThingPage from \"../../routes/ThingPage/ThingPage\";\nimport LoginPage from \"../../routes/LoginPage/LoginPage\";\nimport RegistrationPage from \"../../routes/RegistrationPage/RegistrationPage\";\nimport NotFoundPage from \"../../routes/NotFoundPage/NotFoundPage\";\nimport TokenService from \"../../services/token-service\";\nimport AuthApiService from \"../../services/auth-api-service\";\nimport IdleService from \"../../services/idle-service\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { hasError: false };\n\n  static getDerivedStateFromError(error) {\n    console.error(error);\n    return { hasError: true };\n  }\n\n  componentDidMount() {\n    /*\n      set the function (callback) to call when a user goes idle\n      we'll set this to logout a user when they're idle\n    */\n    IdleService.setIdleCallback(this.logoutFromIdle);\n\n    /* if a user is logged in */\n    if (TokenService.hasAuthToken()) {\n      /*\n        tell the idle service to register event listeners\n        the event listeners are fired when a user does something, e.g. move their mouse\n        if the user doesn't trigger one of these event listeners,\n          the idleCallback (logout) will be invoked\n      */\n      IdleService.regiserIdleTimerResets();\n\n      /*\n        Tell the token service to read the JWT, looking at the exp value\n        and queue a timeout just before the token expires\n      */\n      TokenService.queueCallbackBeforeExpiry(() => {\n        /* the timoue will call this callback just before the token expires */\n        AuthApiService.postRefreshToken();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    /*\n      when the app unmounts,\n      stop the event listeners that auto logout (clear the token from storage)\n    */\n    IdleService.unRegisterIdleResets();\n    /*\n      and remove the refresh endpoint request\n    */\n    TokenService.clearCallbackBeforeExpiry();\n  }\n\n  logoutFromIdle = () => {\n    /* remove the token from localStorage */\n    TokenService.clearAuthToken();\n    /* remove any queued calls to the refresh endpoint */\n    TokenService.clearCallbackBeforeExpiry();\n    /* remove the timeouts that auto logout when idle */\n    IdleService.unRegisterIdleResets();\n    /*\n      react won't know the token has been removed from local storage,\n      so we need to tell React to rerender\n    */\n    this.forceUpdate();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App__header\">\n          <Header />\n        </header>\n        <main className=\"App__main\">\n          {this.state.hasError && (\n            <p className=\"red\">There was an error! Oh no!</p>\n          )}\n          <Switch>\n            <Route exact path={\"/\"} component={ThingListPage} />\n            <PublicOnlyRoute path={\"/login\"} component={LoginPage} />\n            <PublicOnlyRoute path={\"/register\"} component={RegistrationPage} />\n            <PrivateRoute path={\"/thing/:thingId\"} component={ThingPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThingListProvider } from \"./contexts/ThingListContext\";\nimport { ThingProvider } from \"./contexts/ThingContext\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nimport { faStar as farStar } from \"@fortawesome/free-regular-svg-icons\";\n\nimport {\n  faBookOpen,\n  faComment,\n  faGift,\n  faGlobeAmericas,\n  faListOl,\n  faListUl,\n  faPenAlt,\n  faQuoteLeft,\n  faStar as fasStar\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n  faGift, // logo\n  faListUl, // style: listicle\n  faListOl, // style: howto\n  faGlobeAmericas, // style: news\n  faPenAlt, // style: interview\n  faBookOpen, // style: story\n  faComment,\n  faQuoteLeft,\n  farStar,\n  fasStar\n);\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <ThingListProvider>\n      <ThingProvider>\n        <App />\n      </ThingProvider>\n    </ThingListProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}